@startuml Server Class Diagram

class Client {
    - int socket
    - std::string username
    + Client(int socket, const std::string& username)
    + std::string receiveMessage(int &len)
    + void sendMessage(const std::string& message)
    - void sendResponse(const char* message)
}


class Server {
    - int serverSocket
    - std::vector<ClientHandler*> clientHandlers
    - int port
    - sockaddr_in addr
    - std::mutex clientsMutex
    + Server(int port)
    + ~Server()
    + void start()
    + void broadcastMessage(const std::string& message)
    + void removeClient(ClientHandler* handler)
    - void setupAddress()
    - bool createSocket()
    - bool bindSocket()
    - void listenAndAccept()
    - void addClient(ClientHandler* handler)
}

class ClientHandler {
    - Client* client
    - Server* server
    - std::thread thread
    - std::atomic<bool> active
    + explicit ClientHandler(Client* client, Server* server)
    + ~ClientHandler()
    + void start()
    + void run()
    + void stop()
    + Client* getClient()
}

Client "1" -- "0..*" ClientHandler
ClientHandler "1" -- "1" Server

@enduml